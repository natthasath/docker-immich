name: immich

services:
  immich-server:
    container_name: ${IMMICH_SERVER_CONTAINER_NAME}
    image: ${IMMICH_SERVER_IMAGE_NAME}:${IMMICH_SERVER_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TIMEZONE}
    env_file:
      - .env
    ports:
      - ${IMMICH_SERVER_HTTP_PORT}:3001
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
    depends_on:
      - redis
      - postgres

  immich-machine-learning:
    container_name: ${IMMICH_ML_CONTAINER_NAME}
    image: ${IMMICH_ML_IMAGE_NAME}:${IMMICH_ML_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TIMEZONE}
    env_file:
      - .env
    volumes:
      - default:/cache
    networks:
      - default

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: ${REDIS_IMAGE_NAME}:${REDIS_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TIMEZONE}
    networks:
      - default
    healthcheck:
      test: redis-cli ping || exit 1
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: ${POSTGRES_IMAGE_NAME}:${POSTGRES_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      TZ: ${TIMEZONE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ${POSTGRES_DATA_LOCATION}:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: pg_isready --dbname='${POSTGRES_DATABASE}' || exit 1
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}
      start_period: 5m
      start_interval: 30s
    command: ["postgres", "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]

networks:
  default:
    name: ${IMMICH_SERVER_CONTAINER_NAME}_network
    driver: bridge

volumes:
  default:
    name: ${IMMICH_SERVER_CONTAINER_NAME}_data
    driver: local